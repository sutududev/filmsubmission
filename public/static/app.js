async function api(path, opts={}){ const r=await fetch(path, opts); if(!r.ok){ const t=await r.text(); throw new Error(t||('HTTP '+r.status)) } return r.json() }
function h(el, attrs={}, ...children){ const e=document.createElement(el); for(const [k,v] of Object.entries(attrs||{})){ if(k==='class') e.className=v; else if(k.startsWith('on')) e.addEventListener(k.slice(2).toLowerCase(), v); else e.setAttribute(k,v) } for(const c of children.flat()){ if(c==null) continue; if(typeof c==='string') e.appendChild(document.createTextNode(c)); else e.appendChild(c) } return e }

async function loadTitles(){ const list=await api('/api/titles'); const wrap=document.getElementById('titles'); wrap.innerHTML=''; const ul=h('ul',{class:'divide-y border rounded bg-white'}); list.forEach(t=>{ const li=h('li',{class:'p-3 flex items-center justify-between'}, h('div',{}, h('div',{class:'font-semibold'}, t.name), h('div',{class:'text-xs text-gray-500'}, `#${t.id} 路 ${t.status}`)), h('a',{href:`/title/${t.id}`, class:'text-blue-600 hover:underline'}, 'Open')); ul.appendChild(li) }); wrap.appendChild(ul) }

async function createTitle(){ const name=prompt('Title name?','New Title'); if(!name) return; await api('/api/titles',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({name}) }); await loadTitles() }

async function loadUsage(id){ const u=await api(`/api/titles/${id}/usage`); const bar=document.getElementById('usageBar'); const pct=Math.min(100, Math.round(u.used_bytes*100/u.quota_bytes)); bar.style.width=pct+'%'; bar.textContent=`${(u.used_bytes/1024/1024).toFixed(1)}MB / ${(u.quota_bytes/1024/1024).toFixed(0)}MB`; }

async function loadArtworks(id){ const rows=await api(`/api/titles/${id}/artworks`); const wrap=document.getElementById('artworks'); wrap.innerHTML=''; rows.forEach(r=>{ const row=h('div',{class:'flex items-center justify-between p-2 border-b'}, h('div',{}, `${r.kind} 路 ${(r.size_bytes||0)/1024|0} KB`), h('div',{}, h('a',{href:`/api/file/${r.r2_key}`, class:'text-blue-600 mr-3'},'view'), h('button',{class:'text-red-600', onclick: async ()=>{ await api(`/api/artworks/${r.id}`,{method:'DELETE'}); loadArtworks(id); loadUsage(id) }},'delete'))); wrap.appendChild(row) }) }

async function loadCaptions(id){ const rows=await api(`/api/titles/${id}/captions`); const wrap=document.getElementById('captions'); wrap.innerHTML=''; rows.forEach(r=>{ const row=h('div',{class:'flex items-center justify-between p-2 border-b'}, h('div',{}, `${r.language}/${r.kind} 路 ${(r.size_bytes||0)/1024|0} KB`), h('div',{}, h('a',{href:`/api/file/${r.r2_key}`, class:'text-blue-600 mr-3'},'view'), h('button',{class:'text-red-600', onclick: async ()=>{ await api(`/api/captions/${r.id}`,{method:'DELETE'}); loadCaptions(id); loadUsage(id) }},'delete'))); wrap.appendChild(row) }) }

async function loadDocuments(id){ const rows=await api(`/api/titles/${id}/documents`); const wrap=document.getElementById('documents'); wrap.innerHTML=''; rows.forEach(r=>{ const row=h('div',{class:'flex items-center justify-between p-2 border-b'}, h('div',{}, `${r.doc_type} 路 ${(r.size_bytes||0)/1024|0} KB`), h('div',{}, h('a',{href:`/api/file/${r.r2_key}`, class:'text-blue-600 mr-3'},'view'), h('button',{class:'text-red-600', onclick: async ()=>{ await api(`/api/documents/${r.id}`,{method:'DELETE'}); loadDocuments(id); loadUsage(id) }},'delete'))); wrap.appendChild(row) }) }

async function uploadMultipart(url, fields, fileInput){ const fd=new FormData(); for(const [k,v] of Object.entries(fields)) fd.append(k,v); const f=fileInput.files[0]; if(!f) return alert('Select a file'); fd.append('file', f, f.name); await api(url,{ method:'POST', body:fd }); fileInput.value=''; }

window.APP={ loadTitles, createTitle, loadUsage, loadArtworks, loadCaptions, loadDocuments, uploadMultipart }